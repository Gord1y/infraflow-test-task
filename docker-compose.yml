services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
    volumes:
      - miniodata:/data

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '2181:2181'

  kafka:
    image: bitnami/kafka:3.3.1
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper

  backend:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    image: infraflow_backend
    ports:
      - '4000:4000'
    env_file: .env
    depends_on:
      - postgres
      - minio
      - kafka

  frontend:
    build:
      context: .                    
      dockerfile: apps/web/Dockerfile
    image: infraflow_frontend
    ports:
      - '3000:3000'
    env_file: .env
    depends_on:
      - backend

volumes:
  pgdata:
  miniodata:
